{"version":3,"sources":["./src/app/components/view/category/category.component.ts","./src/app/components/view/category/category.component.html","./src/app/components/category-create/category-create.component.ts","./src/app/components/category-create/category-create.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/device.service.ts","./src/app/app.module.ts","./src/app/components/view/device/device.component.ts","./src/app/components/view/device/device.component.html","./src/app/components/templates/header/header.component.ts","./src/app/components/templates/header/header.component.html","./src/app/components/devices-list/devices-list.component.html","./src/app/components/devices-list/devices-list.component.ts","./src/app/components/categories-list/categories-list.component.html","./src/app/components/categories-list/categories-list.component.ts","./src/app/components/templates/header/header.service.ts","./src/app/components/device-create/device-create.component.html","./src/app/components/device-create/device-create.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToDeviceCreate(): void {\n    this.router.navigate(['category/create'])\n  }\n\n}\n","<div>\n  <button mat-button mat-raised-button (click)=\"navigateToDeviceCreate()\">\n    <div class=\"icon\">\n      <mat-icon [inline]=\"true\">add</mat-icon>\n    </div>\n    New Category\n  </button>\n</div>","import { Router } from '@angular/router';\nimport { DeviceService } from 'src/app/device.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/utils/interfaces/device.interface';\n\n@Component({\n  selector: 'app-category-create',\n  templateUrl: './category-create.component.html',\n  styleUrls: ['./category-create.component.css']\n})\nexport class CategoryCreateComponent implements OnInit {\n\n  submitingData = false\n\n  category: Category = {\n    name: ''\n  }\n\n  constructor(private deviceService: DeviceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  createCategory(): void {\n    this.submitingData = true\n    this.deviceService.createCategory(this.category).subscribe(() => {\n      this.deviceService.showMessage('Category Created')\n      this.router.navigate(['/category'])\n    }, (error) => {\n      this.deviceService.showMessage(`Error to Create: ${error}`)\n    }, () => {\n      this.submitingData = false\n    })\n  }\n\n  cancel(): void {\n    this.router.navigate(['/category'])\n  }\n}\n","<mat-card>\r\n  <mat-card-title>New Category</mat-card-title>\r\n\r\n  <form #formDevice=\"ngForm\" novalidate>\r\n    <mat-form-field>\r\n      <input maxlength=\"128\" matInput placeholder=\"Category\" [(ngModel)]=\"category.name\" name=\"category\" required>\r\n    </mat-form-field>\r\n  </form>\r\n\r\n  <button mat-raised-button (click)=\"createCategory()\"\r\n    [ngClass]=\"{'button-active': !submitingData || !formDevice.invalid}\"\r\n    [disabled]=\"submitingData || formDevice.invalid\" color=\"primary\">\r\n    Save\r\n  </button>\r\n\r\n  <button class=\"button-cancel\" mat-raised-button (click)=\"cancel()\">\r\n    Cancel\r\n  </button>\r\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'test';\r\n}\r\n","<app-header></app-header>","import { Category } from './utils/interfaces/device.interface';\r\nimport { Device } from 'src/app/utils/interfaces/device.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar'\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeviceService {\r\n  mainUrl = \"https://managementwebapp-backend.herokuapp.com\"\r\n\r\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) { }\r\n\r\n  showMessage(msg: string): void {\r\n    this.snackBar.open(msg, 'fechar', {\r\n      duration: 3000,\r\n      horizontalPosition: \"right\",\r\n      verticalPosition: \"top\"\r\n    })\r\n  }\r\n\r\n  getDeviceList() {\r\n    const url = `${this.mainUrl}/devices`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getCategoryList() {\r\n    const url = `${this.mainUrl}/categories`;\r\n    return this.http.get<Category>(url);\r\n  }\r\n\r\n  createDevice(device: Device): Observable<Device> {\r\n    const url = `${this.mainUrl}/devices`;\r\n    return this.http.post<Device>(url, device)\r\n  }\r\n\r\n  deleteDevice(id: number) {\r\n    const url = `${this.mainUrl}/devices/${id}`;\r\n    return this.http.delete(url)\r\n  }\r\n\r\n  createCategory(category: Category): Observable<Category> {\r\n    const url = `${this.mainUrl}/categories`;\r\n    return this.http.post<Category>(url, category)\r\n  }\r\n\r\n  deleteCategory(id: number) {\r\n    const url = `${this.mainUrl}/categories/${id}`;\r\n    return this.http.delete(url)\r\n  }\r\n\r\n}\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HeaderComponent } from './components/templates/header/header.component';\r\nimport { DevicesListComponent } from './components/devices-list/devices-list.component';\r\nimport { DeviceCreateComponent } from './components/device-create/device-create.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DeviceComponent } from './components/view/device/device.component';\r\nimport { CategoriesListComponent } from './components/categories-list/categories-list.component';\r\nimport { CategoryComponent } from './components/view/category/category.component';\r\nimport { CategoryCreateComponent } from './components/category-create/category-create.component'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    DevicesListComponent,\r\n    DeviceCreateComponent,\r\n    DeviceComponent,\r\n    CategoriesListComponent,\r\n    CategoryComponent,\r\n    CategoryCreateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatTooltipModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-device',\n  templateUrl: './device.component.html',\n  styleUrls: ['./device.component.css']\n})\nexport class DeviceComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToDeviceCreate(): void {\n    this.router.navigate(['devices-managment/create'])\n  }\n\n}\n","<div>\n  <button mat-button mat-raised-button (click)=\"navigateToDeviceCreate()\">\n    <div class=\"icon\">\n      <mat-icon [inline]=\"true\">add</mat-icon>\n    </div>\n    New Device\n  </button>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HeaderService } from './header.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private headerService: HeaderService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get title(): string {\r\n    return this.headerService.headerData.title\r\n  }\r\n\r\n}\r\n","<nav id=\"nav\" class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\">{{title}}</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\r\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"/devices-managment\">Devices <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/category\">Categories</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>","<app-device></app-device>\r\n<div class=\"container\">\r\n  <table mat-table [dataSource]=\"devices\" class=\"mat-elevation-z1\">\r\n\r\n    <ng-container matColumnDef=\"category\">\r\n      <th mat-header-cell *matHeaderCellDef> Category </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.category_name ? element.category_name : \"No Category\" }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"color\">\r\n      <th mat-header-cell *matHeaderCellDef> Color </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"partNumber\">\r\n      <th mat-header-cell *matHeaderCellDef> Part Number </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.partNumber}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a class=\"delete\" (click)=\"delete(element.id)\">\r\n          <mat-icon matTooltip=\"Delete\">\r\n            delete\r\n          </mat-icon>\r\n        </a>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n</div>","import { HeaderService } from './../templates/header/header.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DeviceService } from 'src/app/device.service';\r\nimport { Device } from 'src/app/utils/interfaces/device.interface';\r\n\r\n@Component({\r\n  selector: 'app-devices-list',\r\n  templateUrl: './devices-list.component.html',\r\n  styleUrls: ['./devices-list.component.css']\r\n})\r\nexport class DevicesListComponent implements OnInit {\r\n\r\n  public devices: Device | any;\r\n\r\n  public displayedColumns = ['category', 'color', 'partNumber', 'action'];\r\n\r\n  constructor(private deviceService: DeviceService, private headerService: HeaderService) {\r\n    headerService.headerData = {\r\n      title: 'Device Management'\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getList()\r\n  }\r\n  getList() {\r\n    this.deviceService.getDeviceList().subscribe((res) => {\r\n      this.devices = res;\r\n    })\r\n  }\r\n\r\n  delete(id: number) {\r\n    if (confirm('Are you sure you want to delete this Device?')) {\r\n      this.deviceService.deleteDevice(id).subscribe(() => {\r\n        this.deviceService.showMessage('Device Deleted')\r\n        this.getList()\r\n      }, (error) => {\r\n        this.deviceService.showMessage(`delete error: ${error}`)\r\n      })\r\n    }\r\n  }\r\n}\r\n","<app-category></app-category>\r\n<div class=\"container\">\r\n\r\n  <table mat-table [dataSource]=\"categorys\" class=\"mat-elevation-z1\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Category Name</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a class=\"delete\" (click)=\"delete(element.id)\">\r\n          <mat-icon matTooltip=\"Delete\">\r\n            delete\r\n          </mat-icon>\r\n        </a>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>","import { HeaderService } from './../templates/header/header.service';\nimport { DeviceService } from 'src/app/device.service';\nimport { Category } from './../../utils/interfaces/device.interface';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n\n  public categorys: Category | any;\n\n  public displayedColumns = ['name', 'action']\n\n  constructor(private deviceService: DeviceService, private headerService: HeaderService) {\n    headerService.headerData = {\n      title: 'Category Management'\n    }\n  }\n\n  ngOnInit(): void {\n    this.getList();\n  }\n\n  getList() {\n    this.deviceService.getCategoryList().subscribe((res) => {\n      this.categorys = res;\n      console.log(this.categorys);\n\n    })\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this Category?')) {\n      this.deviceService.deleteCategory(id).subscribe(() => {\n        this.deviceService.showMessage('Category Deleted')\n        this.getList()\n      }, (error) => {\n        this.deviceService.showMessage(`delete error: ${error}`)\n      })\n    }\n  }\n}\n","import { HeaderData } from './header-data.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderService {\r\n\r\n  private _headerData = new BehaviorSubject<HeaderData>({\r\n    title: 'Device Management'\r\n  })\r\n\r\n  constructor() { }\r\n\r\n  get headerData(): HeaderData {\r\n    return this._headerData.value\r\n  }\r\n\r\n  set headerData(headerData: HeaderData) {\r\n    this._headerData.next(headerData)\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>New Device</mat-card-title>\r\n  <form #formDevice=\"ngForm\" novalidate>\r\n\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Category</mat-label>\r\n      <mat-select [(ngModel)]=\"device.category\" name=\"category\" required>\r\n        <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">\r\n          {{category.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input maxlength=\"16\"\r\n        onkeypress=\"return (event.charCode > 64 && event.charCode < 91) || (event.charCode > 96 && event.charCode < 123) || (event.charCode==32)\"\r\n        matInput placeholder=\"Color\" [(ngModel)]=\"device.color\" name=\"color\" required>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input type=\"number\" matInput placeholder=\"Part Number\" [(ngModel)]=\"device.partNumber\" name=\"partNumber\"\r\n        required>\r\n    </mat-form-field>\r\n  </form>\r\n\r\n  <button mat-raised-button (click)=\"createDevice()\"\r\n    [ngClass]=\"{'button-active': !submitingData || !formDevice.invalid}\"\r\n    [disabled]=\"submitingData || formDevice.invalid\" color=\"primary\">\r\n    Save\r\n  </button>\r\n\r\n  <button class=\"button-cancel\" mat-raised-button (click)=\"cancel()\">\r\n    Cancel\r\n  </button>\r\n</mat-card>","import { Category } from './../../utils/interfaces/device.interface';\r\nimport { Router } from '@angular/router';\r\nimport { DeviceService } from 'src/app/device.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Device } from 'src/app/utils/interfaces/device.interface';\r\n\r\n\r\n@Component({\r\n  selector: 'app-device-create',\r\n  templateUrl: './device-create.component.html',\r\n  styleUrls: ['./device-create.component.css']\r\n})\r\nexport class DeviceCreateComponent implements OnInit {\r\n\r\n  submitingData = false\r\n\r\n  device: Device = {\r\n    category: null,\r\n    color: '',\r\n    partNumber: null\r\n  }\r\n\r\n  categories: Category\r\n\r\n  constructor(private deviceService: DeviceService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.deviceService.getCategoryList().subscribe((res) => {\r\n      this.categories = res;\r\n    })\r\n  }\r\n\r\n  createDevice(): void {\r\n    this.submitingData = true\r\n    this.deviceService.createDevice(this.device).subscribe(() => {\r\n      this.deviceService.showMessage('Device Created')\r\n      this.router.navigate(['/'])\r\n    }, (error) => {\r\n      this.deviceService.showMessage(`Error to Create: ${error}`)\r\n    }, () => {\r\n      this.submitingData = false\r\n    })\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/'])\r\n  }\r\n\r\n}\r\n","import { CategoryCreateComponent } from './components/category-create/category-create.component';\r\nimport { CategoriesListComponent } from './components/categories-list/categories-list.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { DeviceCreateComponent } from \"./components/device-create/device-create.component\";\r\nimport { DevicesListComponent } from \"./components/devices-list/devices-list.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\", redirectTo: 'devices-managment', pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'devices-managment', component: DevicesListComponent\r\n  },\r\n  {\r\n    path: \"category\", component: CategoriesListComponent\r\n  },\r\n  {\r\n    path: \"devices-managment/create\", component: DeviceCreateComponent\r\n  },\r\n  {\r\n    path: \"category/create\", component: CategoryCreateComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}